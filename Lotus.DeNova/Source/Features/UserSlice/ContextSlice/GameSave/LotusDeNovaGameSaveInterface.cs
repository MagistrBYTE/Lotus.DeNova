//=====================================================================================================================
// Проект: Модуль игровой вселенной DeNova
// Раздел: Подсистема контекста игры
// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>
//---------------------------------------------------------------------------------------------------------------------
/** \file LotusDeNovaGameContextInterface.cs
*		Определение интерфейса сервиса для сохранения контекста игры.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 30.04.2023
//=====================================================================================================================
using Lotus.Repository;
//=====================================================================================================================
namespace Lotus
{
    namespace DeNova
	{
		//-------------------------------------------------------------------------------------------------------------
		/** \addtogroup DeNovaGameContext
		*@{*/
		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Интерфейс сервиса для сохранения контекста игры
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public interface ILotusGameSaveService
		{
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Сохранение текущего контекста игры
			/// </summary>
			/// <param name="saveCreate">Параметры для создания сохранения</param>
			/// <param name="token">Токен отмены</param>
			/// <returns>Сохранение контекста игры</returns>
			//---------------------------------------------------------------------------------------------------------
			Task<Response<GameSaveDto>> SaveAsync(GameSaveCreateDto saveCreate, CancellationToken token);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Загрузка указанного сохранения контекста игры
			/// </summary>
			/// <param name="load">Параметры для загрузки сохранения</param>
			/// <param name="token">Токен отмены</param>
			/// <returns>Статус успешности</returns>
			//---------------------------------------------------------------------------------------------------------
			Task<Response> LoadAsync(GameLoadDto load, CancellationToken token);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Обновление сохранения контекста игры
			/// </summary>
			/// <param name="saveUpdate">Параметры обновляемого сохранения контекста игры</param>
			/// <param name="token">Токен отмены</param>
			/// <returns>Сохранение контекста игры</returns>
			//---------------------------------------------------------------------------------------------------------
			Task<Response<GameSaveDto>> UpdateAsync(GameSaveDto saveUpdate, CancellationToken token);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Получение списка сохранений контекста игры
			/// </summary>
			/// <param name="saveRequest">Параметры получения списка</param>
			/// <param name="token">Токен отмены</param>
			/// <returns>Cписок сохранений контекста игры</returns>
			//---------------------------------------------------------------------------------------------------------
			Task<ResponsePage<GameSaveDto>> GetAllAsync(GameSavesDto saveRequest, CancellationToken token);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Удаление сохранения контекста игры
			/// </summary>
			/// <param name="id">Идентификатор сохранения контекста игры</param>
			/// <param name="token">Токен отмены</param>
			/// <returns>Статус успешности</returns>
			//---------------------------------------------------------------------------------------------------------
			Task<Response> DeleteAsync(Guid id, CancellationToken token);
		}
        //-------------------------------------------------------------------------------------------------------------
        /**@}*/
        //-------------------------------------------------------------------------------------------------------------
    }
}
//=====================================================================================================================