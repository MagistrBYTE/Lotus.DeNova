//=====================================================================================================================
// Проект: Модуль игровой вселенной DeNova
// Раздел: Подсистема контекста игры
// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>
//---------------------------------------------------------------------------------------------------------------------
/** \file LotusDeNovaGameContextInterface.cs
*		Определение интерфейса сервиса для работы с контекстами игры.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 30.04.2023
//=====================================================================================================================
using Lotus.Repository;
//=====================================================================================================================
namespace Lotus
{
    namespace DeNova
	{
		//-------------------------------------------------------------------------------------------------------------
		/** \addtogroup DeNovaGameContext
		*@{*/
		//-------------------------------------------------------------------------------------------------------------
		/// <summary>
		/// Интерфейс сервиса для работы с контекстами игры
		/// </summary>
		//-------------------------------------------------------------------------------------------------------------
		public interface ILotusGameContextService
		{
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Создание контекста игры по указанным данным
			/// </summary>
			/// <remarks>
			/// Созданный контекст становиться актуальным
			/// </remarks>
			/// <param name="gameCreate">Параметры для создания контекста игры</param>
			/// <param name="token">Токен отмены</param>
			/// <returns>Контекст игры</returns>
			//---------------------------------------------------------------------------------------------------------
			Task<Response<GameContextDto>> CreateAsync(GameContextCreateDto gameCreate, CancellationToken token);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Обновление данных указанного контекста игры
			/// </summary>
			/// <param name="gameUpdate">Параметры обновляемого контекста игры</param>
			/// <param name="token">Токен отмены</param>
			/// <returns>Контекст игры</returns>
			//---------------------------------------------------------------------------------------------------------
			Task<Response<GameContextDto>> UpdateAsync(GameContextDto gameUpdate, CancellationToken token);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Получение указанного контекста игры
			/// </summary>
			/// <param name="id">Идентификатор контекста игры</param>
			/// <param name="token">Токен отмены</param>
			/// <returns>Контекст игры</returns>
			//---------------------------------------------------------------------------------------------------------
			Task<Response<GameContextDto>> GetAsync(Guid id, CancellationToken token);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Получение списка контекстов игр
			/// </summary>
			/// <param name="gameRequest">Параметры получения списка</param>
			/// <param name="token">Токен отмены</param>
			/// <returns>Cписок контекстов игр</returns>
			//---------------------------------------------------------------------------------------------------------
			Task<ResponsePage<GameContextDto>> GetAllAsync(GameContextsDto gameRequest, CancellationToken token);

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Удаление контекста игры
			/// </summary>
			/// <param name="id">Идентификатор контекста игры</param>
			/// <param name="token">Токен отмены</param>
			/// <returns>Статус успешности</returns>
			//---------------------------------------------------------------------------------------------------------
			Task<Response> DeleteAsync(Guid id, CancellationToken token);
		}
        //-------------------------------------------------------------------------------------------------------------
        /**@}*/
        //-------------------------------------------------------------------------------------------------------------
    }
}
//=====================================================================================================================