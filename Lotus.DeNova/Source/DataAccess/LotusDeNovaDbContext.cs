//=====================================================================================================================
// Проект: Модуль игровой вселенной DeNova
// Раздел: Слой данных
// Автор: MagistrBYTE aka DanielDem <dementevds@gmail.com>
//---------------------------------------------------------------------------------------------------------------------
/** \file LotusDeNovaDbContext.cs
*		Контекс базы данных для хранения пользователей и учетных данных.
*/
//---------------------------------------------------------------------------------------------------------------------
// Версия: 1.0.0.0
// Последнее изменение от 30.04.2023
//=====================================================================================================================
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Diagnostics;
//---------------------------------------------------------------------------------------------------------------------
using Lotus.Account;
//=====================================================================================================================
namespace Lotus
{
    namespace DeNova
    {
        //-------------------------------------------------------------------------------------------------------------
        /**
         * \defgroup DeNovaDataAccess Слой данных
         * \ingroup DeNova
         * \brief Слой данных модуля.
         * @{
         */
        //-------------------------------------------------------------------------------------------------------------
        /// <summary>
        /// Контекст базы данных представляющий собой всех пользователей и учетных данных
        /// </summary>
        //-------------------------------------------------------------------------------------------------------------
        public class CDeNovaDbContext : CAccountDbContext
        {
			#region ======================================= СВОЙСТВА ==================================================
			//
			// ТЕРРИТОРИАЛЬНО-АДРЕСНОЕ ХОЗЯЙСТВО
			//
			/// <summary>
			/// Список сельских поселений
			/// </summary>
			public DbSet<CAddressVillageSettlement> AddressVillageSettlements { get; set; } = default!;

			/// <summary>
			/// Список населенных пунктов
			/// </summary>
			public DbSet<CAddressVillage> AddressVillages { get; set; } = default!;

			/// <summary>
			/// Список улиц
			/// </summary>
			public DbSet<CAddressStreet> AddressStreets { get; set; } = default!;

			/// <summary>
			/// Список адресов
			/// </summary>
			public DbSet<CAddressElement> AddressElements { get; set; } = default!;

			//
			// ПЕРСОНАЖ
			//
			/// <summary>
			/// Список персонажей
			/// </summary>
			public DbSet<CPerson> Persons { get; set; } = default!;

			/// <summary>
			/// Список адресов регистраций персонажей
			/// </summary>
			public DbSet<CAddressInfo> AddressInfos { get; set; } = default!;

			/// <summary>
			/// Список астрологических сведений персонажей
			/// </summary>
			public DbSet<CAstrologyInfo> AstrologyInfos { get; set; } = default!;

			/// <summary>
			/// Список аваторов для персонажей
			/// </summary>
			public DbSet<CAvatarInfo> AvatarInfos { get; set; } = default!;

			/// <summary>
			/// Список сведений о рождении персонажа
			/// </summary>
			public DbSet<CBirthdayInfo> BirthdayInfos { get; set; } = default!;

			/// <summary>
			/// Список идентификационных сведений о персонажа
			/// </summary>
			public DbSet<CIdentityInfo> IdentityInfos { get; set; } = default!;
			#endregion

			#region ======================================= КОНСТРУКТОРЫ ==============================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Конструктор по умолчанию инициализирует объект класса предустановленными значениями
			/// </summary>
			//---------------------------------------------------------------------------------------------------------
			public CDeNovaDbContext()
            {
            }

			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Конструктор инициализирует объект класса указанными параметрами
			/// </summary>
			/// <param name="options">Параметры конфигурации</param>
			//---------------------------------------------------------------------------------------------------------
			public CDeNovaDbContext(DbContextOptions<CDeNovaDbContext> options)
				: base(options)
			{
			}
			#endregion

			#region ======================================= ОБЩИЕ МЕТОДЫ ==============================================
			//---------------------------------------------------------------------------------------------------------
			/// <summary>
			/// Конфигурирование моделей
			/// </summary>
			/// <param name="modelBuilder">Интерфейс для построения моделей</param>
			//---------------------------------------------------------------------------------------------------------
			protected override void OnModelCreating(ModelBuilder modelBuilder)
            {
				base.OnModelCreating(modelBuilder);

                XDbConfiguration.ConfigurationDenovaDatabase(modelBuilder);
            }
            #endregion
        }
        //-------------------------------------------------------------------------------------------------------------
        /**@}*/
        //-------------------------------------------------------------------------------------------------------------
    }
}
//=====================================================================================================================